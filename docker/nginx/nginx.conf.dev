user www-data;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Development server configuration
    server {
        listen 80;
        server_name _;

        root /var/www/html/public;
        index index.php index.html;

        # Security headers for development
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }

        location ~ \.php$ {
            fastcgi_pass 127.0.0.1:9000;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
            
            # Increase upload limits
            client_max_body_size 10M;
            fastcgi_read_timeout 300;
        }

        # File upload handling
        location ~* \.(jpg|jpeg|png|gif|ico|pdf|doc|docx|xls|xlsx|ppt|pptx|mp4|mp3|avi|mov)$ {
            expires 1M;
            access_log off;
            add_header Cache-Control "public";
            try_files $uri /index.php?$query_string;
        }

        # Static assets
        location ~* \.(css|js|woff|woff2|ttf|svg)$ {
            expires 1M;
            access_log off;
            add_header Cache-Control "public";
        }

        # Block access to sensitive files
        location ~ /\. {
            deny all;
        }

        location ~ /(storage|bootstrap/cache)/ {
            deny all;
        }
    }
}
